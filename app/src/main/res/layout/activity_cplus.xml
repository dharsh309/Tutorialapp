<?xml version="1.0" encoding="utf-8"?>

<android.support.v4.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".Cplus"
    android:id="@+id/nested_scroll_view"
    android:background="@android:color/white"
    android:scrollbars="none"
    android:scrollingCache="true">
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginLeft="@dimen/_3sdp"
        android:orientation="vertical">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">

            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="1.Explain what is a class in C++?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />

            <ImageButton
                android:id="@+id/bt_toggle_q1"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp"/>

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q1"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
             android:orientation="vertical"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginEnd="@dimen/_32sdp"
                android:layout_marginLeft="?attr/actionBarSize"
                android:layout_marginRight="@dimen/_32sdp"
                android:layout_marginStart="?attr/actionBarSize"
                android:gravity="center_vertical"
                android:minHeight="@dimen/_32sdp"
                android:orientation="horizontal">

                <TextView
                    android:id="@+id/textview1"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:text=" A class in C++ can be defined as a collection of function and related data under a single name. It is a blueprint of objects. A C++ program can consist of any number of classes."
                    android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

            </LinearLayout>
        </LinearLayout>

        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">
            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="2. Explain what is the use of void main () in C++ language?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q2"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp"
                tools:ignore="VectorDrawableCompat" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q2"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
             android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textview2"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="To run the C++ application it involves two steps, the first step is a compilation where conversion of C++ code to object code take place. While second step includes linking, where combining of object code from the programmer and from libraries takes place. This function is operated by main () in C++ language."
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>

        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="3.Explain what are the characteristics of Class Members in C++?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q3"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q3"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
             android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textView3"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="• Data and Functions are members in C++,
• Within the class definition, data members and methods must be declared
• Within a class, a member cannot be re-declare
• Other that in the class definition, no member can be added elsewhere
"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="4.Define basic type of variable used for a different condition in C++?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q4"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q4"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
             android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textView4"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="The variable used for a different condition in C++ are
• Bool: Variable to store boolean values (true or false)
• Char: Variable to store character types
• int : Variable with integral values
• float and double: Types of variables with large and floating point values

"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="5.Explain what is Loop function? What are different types of Loops?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q5"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp"
                tools:ignore="VectorDrawableCompat" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q5"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
             android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textView5"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text=" In any programming language, to execute a set of statements repeatedly until a particular condition is satisfied Loop function is used. The loop statement is kept under the curly braces { } referred as Loop body.
In C++ language, three types of loops are used
• While loop
• For loop
• Do-while loop
"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="6.Explain what is data abstraction in C++?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q6"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q6"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
             android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textView6"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="Data abstraction is a technique to provide essential information to the outside world while hiding the background details. Here in below example you don’t have to understand how cout display the text “Hello guru99” on the user screen and at the same time implementation of cout is free to change"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="7.Explain what is C++ exceptional handling?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q7"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q7"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
             android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textViewq7"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="The problem that arises during execution of a program is referred as exceptional handling. The exceptional handling in C++ is done by three keywords.
• Try: It identifies a block of code for which particular exceptions will be activated
• Catch: The catch keyword indicates the catching of an exception by an exception handler at the place in a program
• Throw: When a problem exists while running the code, the program throws an exception

"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="8.Mention what are the types of Member Functions?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q8"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q8"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textView8"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text=" The types of member functions are
• Simple functions
• Static functions
• Const functions
• Inline functions
• Friend functions

"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="9.Explain what is upcasting in C++?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q9"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q9"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textView9"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="Upcasting is the act of converting a sub class references or pointer into its super class reference or pointer is called upcasting.
"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="10.Explain what is COPY CONSTRUCTOR and what is it used for?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q10"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q10"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textView10"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text=" COPY CONSTRUCTOR is a technique that accepts an object of the same class and copies its data member to an object on the left part of the assignment.

"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />







        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">

            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="11.What are the different ways of passing parameters to the functions? Which to use when?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />

            <ImageButton
                android:id="@+id/bt_toggle_q11"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp"/>

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q11"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <LinearLayout
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginEnd="@dimen/_32sdp"
                android:layout_marginLeft="?attr/actionBarSize"
                android:layout_marginRight="@dimen/_32sdp"
                android:layout_marginStart="?attr/actionBarSize"
                android:gravity="center_vertical"
                android:minHeight="@dimen/_32sdp"
                android:orientation="horizontal">

                <TextView
                    android:id="@+id/textview11"
                    android:layout_width="0dp"
                    android:layout_height="wrap_content"
                    android:layout_weight="1"
                    android:text="Call by value − We send only values to the function as parameters. We choose this if we do not want the actual parameters to be modified with formal parameters but just used.

Call by address − We send address of the actual parameters instead of values. We choose this if we do want the actual parameters to be modified with formal parameters.

Call by reference − The actual parameters are received with the C++ new reference variables as formal parameters. We choose this if we do want the actual parameters to be modified with formal parameters."
                    android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

            </LinearLayout>
        </LinearLayout>

        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">
            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="12.What is ‘cout’?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q12"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp"
                tools:ignore="VectorDrawableCompat" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q12"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone"
            android:minHeight="@dimen/_32sdp">

            <TextView
                android:id="@+id/textview12"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="cout is the object of ostream class. The stream ‘cout’ is by default connected to console output device."
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>

        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="13.What is ‘cin’?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />


            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q13"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q13"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone"
            android:minHeight="@dimen/_32sdp">

            <TextView
                android:id="@+id/textView13"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="cin is the object of istream class. The stream ‘cin’ is by default connected to console input device."
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />
        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="14.What is a virtual destructor?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q14"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q14"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone">

            <TextView
                android:id="@+id/textView14"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="A virtual destructor ensures that the objects resources are released in the reverse order of the object being constructed w.r.t inherited object."
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="15.What are the differences between C and C++?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q15"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp"
                tools:ignore="VectorDrawableCompat" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q15"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone"
            android:minHeight="@dimen/_32sdp">

            <TextView
                android:id="@+id/textView15"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="1) C++ is a kind of superset of C, most of C programs except few exceptions (See this and this) work in C++ as well.
2) C is a procedural programming language, but C++ supports both procedural and Object Oriented programming.
3) Since C++ supports object oriented programming, it supports features like function overloading, templates, inheritance, virtual functions, friend functions. These features are absent in C.
4) C++ supports exception handling at language level, in C exception handling is done in traditional if-else style.
5) C++ supports references, C doesn’t.
6) In C, scanf() and printf() are mainly used input/output. C++ mainly uses streams to perform input and output operations. cin is standard input stream and cout is standard output stream."
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="16.What are VTABLE and VPTR?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q16"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q16"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone"
            android:minHeight="@dimen/_32sdp">

            <TextView
                android:id="@+id/textView16"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="vtable is a table of function pointers. It is maintained per class.
vptr is a pointer to vtable. It is maintained per object (See this for an example).
Compiler adds additional code at two places to maintain and use vtable and vptr.
1) Code in every constructor. This code sets vptr of the object being created. This code sets vptr to point to vtable of the class.
2) Code with polymorphic function call (e.g. bp->show() in above code). Wherever a polymorphic call is made, compiler inserts code to first look for vptr using base class pointer or reference (In the above example, since pointed or referred object is of derived type, vptr of derived class is accessed). Once vptr is fetched, vtable of derived class can be accessed. Using vtable, address of derived derived class function show() is accessed and called."
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="17. What is Constructor and destructor in C++?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q17"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q17"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone"
            android:minHeight="@dimen/_32sdp">

            <TextView
                android:id="@+id/textViewq17"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="The constructor has been executed when the new objects of the class are created. It will have the same name exactly as the class name. A constructor can be the default constructor, which is not required to mention and it does not have any parameter. A constructor can be parametrized constructor that we need to mention or declare in class and parameters needs to be initialized.
Destructor has been executed when the objects of a class are not in scope or it’s no longer in use. It will have the same name exactly as the class name but should be prefixed with (~) sign. It is mainly used for releasing the resources like a closing of files, etc."
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="18. What is inheritance and explain its types?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q18"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"

                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q18"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone"
            android:minHeight="@dimen/_32sdp">

            <TextView
                android:id="@+id/textViewq18"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="Inheritance explained earlier, please check question no. 2. There are different types of Inheritance that are:

Single Inheritance: It refers to the inheritance when there is only one parent class and child class.
Multiple Inheritance: It refers to inheritance when a derived class inherits the properties of two or more classes.
Multilevel Inheritance: It refers to inheritance when the derived class is base class for another class.
Hierarchical Inheritance: It refers to inheritance when multiple derived classes inherit the properties of the same base class.
Hybrid Inheritance: It refers to Virtual Inheritance. It is a combination of Multilevel and Hierarchical inheritance"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="19.What are the access specifiers in C++?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorPrimary" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q19"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q19"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone"
            android:minHeight="@dimen/_32sdp">

            <TextView
                android:id="@+id/textView19"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="In an object-oriented language, access specifiers are referred to as the keywords that are used to set the accessibility of classes, function, methods and other members. There are only 3 access specifiers for C++ that are: 1. Public 2. Private 3. ProtectedPublic: The members or fields that are declared as public can be accessed outside the class as well.
Private: The members or fields that are declared as private cannot be accessed outside the class. They can be accessed only inside the class.
Protected: The members or fields that are declared as protected can be accessed outside the class but only in a class derived from that class.
"
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:gravity="center_vertical"
            android:minHeight="?attr/actionBarSize"
            android:orientation="horizontal">


            <TextView
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="20.What Is The Standard Template Library?"
                android:textAppearance="@style/TextAppearance.AppCompat.Medium"
                android:textColor="@color/colorAccent" />

            <View
                android:layout_width="@dimen/_32sdp"
                android:layout_height="wrap_content" />

            <ImageButton
                android:id="@+id/bt_toggle_q20"
                android:layout_width="?attr/actionBarSize"
                android:layout_height="?attr/actionBarSize"
                android:background="?attr/selectableItemBackgroundBorderless"
                android:tint="@color/colorPrimary"
                app:srcCompat="@drawable/ic_arrow_drop_down_black_24dp" />

        </LinearLayout>

        <LinearLayout
            android:id="@+id/lyt_expand_q20"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_marginEnd="@dimen/_32sdp"
            android:layout_marginLeft="?attr/actionBarSize"
            android:layout_marginRight="@dimen/_32sdp"
            android:layout_marginStart="?attr/actionBarSize"
            android:gravity="center_vertical"
            android:orientation="horizontal"
            android:paddingBottom="@dimen/_5sdp"
            android:paddingTop="@dimen/_5sdp"
            android:visibility="gone"
            android:minHeight="@dimen/_32sdp">

            <TextView
                android:id="@+id/textView20"
                android:layout_width="0dp"
                android:layout_height="wrap_content"
                android:layout_weight="1"
                android:text="
A library of container templates approved by the ANSI committee for inclusion in the standard C++ specification.

A programmer who then launches into a discussion of the generic programming model, iterators, allocators, algorithms, and such, has a higher than average understanding of the new technology that STL brings to C++ programming."
                android:textAppearance="@style/TextAppearance.AppCompat.Subhead" />

        </LinearLayout>
        <View
            android:layout_width="match_parent"
            android:layout_height="1px"
            android:background="#000000" />







    </LinearLayout>




</android.support.v4.widget.NestedScrollView>